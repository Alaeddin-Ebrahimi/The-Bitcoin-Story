<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Bitcoin Story: An Interactive Report</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Warm Neutrals -->
    <!-- Application Structure Plan: A thematic, single-page scrolling application is chosen for a narrative-driven user experience. The structure guides the user logically from Bitcoin's origins ("The Story"), to its mechanics ("How It Works"), its market performance ("The Market"), and finally its broader societal implications ("Global Impact"). This flow transforms a dense report into an intuitive journey of discovery. Key interactions include a hover-enabled historical price chart, clickable cards for demystifying technology, and an interactive diagram for understanding supply, making complex data highly accessible. -->
    <!-- Visualization & Content Choices: 
        - Report Info: Price History -> Goal: Show change -> Viz: Line Chart (Chart.js) -> Interaction: Hover tooltips for date/price -> Justification: Best for time-series data, intuitive for users.
        - Report Info: Supply Mechanics -> Goal: Show proportion -> Viz: Donut Chart (Chart.js) & Stat Cards -> Interaction: Hover highlights -> Justification: Clearly visualizes the part-to-whole relationship of mined vs. unmined coins.
        - Report Info: Core Technology (Blockchain, Mining) -> Goal: Organize & Explain -> Viz: Clickable HTML/CSS Cards -> Interaction: Click to reveal simplified text -> Justification: Breaks down complex topics into digestible, user-initiated learning chunks, avoiding overload.
        - Report Info: Creation & Milestones -> Goal: Show sequence -> Viz: Vertical Timeline (HTML/CSS) -> Interaction: Scroll-based discovery -> Justification: Provides clear chronological context for Bitcoin's evolution.
        - Report Info: Global Regulation -> Goal: Compare -> Viz: Interactive Categorized List (HTML/CSS) -> Interaction: Click to show stance detail -> Justification: Simplifies fragmented global data into an easily comparable format without needing a complex map.
    -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #FDFBF8;
            color: #333333;
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
        .nav-link {
            transition: color 0.3s ease;
        }
        .nav-link:hover, .nav-link.active {
            color: #F59E0B;
        }
        .tech-card.active {
            border-color: #F59E0B;
            transform: translateY(-5px);
        }
        .tech-card {
            transition: all 0.3s ease;
        }
        .stat-card {
            background-color: #FFFFFF;
            border: 1px solid #E5E7EB;
            border-radius: 0.75rem;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        }
        .timeline-item::before {
            content: '';
            position: absolute;
            top: 1rem;
            left: -0.8rem;
            width: 1.25rem;
            height: 1.25rem;
            background-color: #F59E0B;
            border-radius: 9999px;
            border: 4px solid #FDFBF8;
            z-index: 10;
        }
        /* Loading Spinner */
        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: #F59E0B;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .source-text {
            font-size: 0.75rem; /* text-xs */
            color: #6B7280; /* text-gray-500 */
            margin-top: 0.5rem;
            text-align: right;
            display: block;
        }
    </style>
</head>
<body class="antialiased">

    <header class="bg-white/80 backdrop-blur-md sticky top-0 z-50 shadow-sm">
        <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <div class="flex-shrink-0">
                    <h1 class="text-xl font-bold text-gray-800">The Bitcoin Story</h1>
                </div>
                <div class="hidden md:block">
                    <div class="ml-10 flex items-baseline space-x-4">
                        <a href="#story" class="nav-link px-3 py-2 rounded-md text-sm font-medium text-gray-700">The Story</a>
                        <a href="#tech" class="nav-link px-3 py-2 rounded-md text-sm font-medium text-gray-700">How It Works</a>
                        <a href="#market" class="nav-link px-3 py-2 rounded-md text-sm font-medium text-gray-700">The Market</a>
                        <a href="#impact" class="nav-link px-3 py-2 rounded-md text-sm font-medium text-gray-700">Global Impact</a>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <!-- Hero Section -->
        <section id="hero" class="py-20 bg-white">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <h2 class="text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl md:text-6xl">
                    <span class="block">Understanding Bitcoin</span>
                    <span class="block text-amber-500">From Genesis to Global Asset</span>
                </h2>
                <p class="mt-6 max-w-2xl mx-auto text-lg leading-8 text-gray-600">
                    Explore the origins, technology, market journey, and global impact of the world's first decentralized digital currency. This interactive report breaks down complex topics into an easy-to-understand narrative.
                </p>
            </div>
        </section>

        <!-- The Story Section -->
        <section id="story" class="py-16 md:py-24">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="max-w-3xl mx-auto text-center">
                    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">The Genesis of Bitcoin</h2>
                    <p class="mt-4 text-lg text-gray-600">
                        Bitcoin emerged from a desire for a financial system free from central control. This section explores its mysterious creator and the key moments that marked its birth, setting the stage for a digital revolution.
                    </p>
                </div>

                <div class="mt-16 max-w-4xl mx-auto">
                    <div class="relative pl-8 border-l-2 border-gray-200">
                        <!-- Timeline Item 1 -->
                        <div class="timeline-item mb-12">
                            <h3 class="text-lg font-semibold text-amber-600">Oct 31, 2008: The Whitepaper</h3>
                            <p class="mt-1 text-gray-700">The world is introduced to Bitcoin through a whitepaper titled "Bitcoin: A Peer-to-Peer Electronic Cash System," published by the pseudonymous Satoshi Nakamoto. Its author's true identity remains one of the biggest mysteries in tech.</p>
                        </div>
                        <!-- Timeline Item 2 -->
                        <div class="timeline-item mb-12">
                            <h3 class="text-lg font-semibold text-amber-600">Jan 3, 2009: The Genesis Block</h3>
                            <p class="mt-1 text-gray-700">The Bitcoin network officially begins. The first block, Block 0, is mined by Satoshi. Embedded in it is a headline from The Times: "Chancellor on brink of second bailout for banks," a poignant critique of the traditional financial system.</p>
                        </div>
                        <!-- Timeline Item 3 -->
                        <div class="timeline-item mb-12">
                             <h3 class="text-lg font-semibold text-amber-600">2010: The First Purchase</h3>
                             <p class="mt-1 text-gray-700">In a landmark event, programmer Laszlo Hanyecz pays 10,000 BTC for two pizzas, establishing the first real-world valuation for the nascent currency and proving its potential as a medium of exchange.</p>
                        </div>
                        <!-- Timeline Item 4 -->
                        <div class="timeline-item">
                            <h3 class="text-lg font-semibold text-amber-600">2011: Satoshi Disappears</h3>
                            <p class="mt-1 text-gray-700">After collaborating with other developers, Satoshi Nakamoto transfers control of the project and ceases all public communication, leaving Bitcoin to evolve in a truly decentralized manner, guided by its community.</p>
                        </div>
                    </div>

                    <!-- Ask Satoshi Feature -->
                    <div class="mt-16 bg-blue-50/50 border border-blue-200 rounded-lg p-6 text-center">
                        <h3 class="text-xl font-bold text-blue-800 mb-4">Want an Insight from Satoshi?</h3>
                        <button id="askSatoshiBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:scale-105">
                            Ask Satoshi ✨
                        </button>
                        <div id="satoshiQuoteContainer" class="mt-6 p-4 bg-blue-100 rounded-lg hidden">
                            <p id="satoshiQuote" class="text-lg text-blue-900 italic">
                                <!-- Satoshi's quote will be inserted here -->
                            </p>
                        </div>
                        <div id="satoshiLoading" class="hidden mt-4 flex justify-center items-center">
                            <div class="spinner"></div>
                            <span class="ml-2 text-blue-700">Brewing wisdom...</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- How It Works Section -->
        <section id="tech" class="py-16 md:py-24 bg-white">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="max-w-3xl mx-auto text-center">
                    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">How Bitcoin Works (In Simple Terms)</h2>
                     <p class="mt-4 text-lg text-gray-600">
                        Bitcoin's technology can seem daunting, but its core concepts are built on simple principles. This section demystifies the magic behind Bitcoin, explaining the blockchain, mining, and decentralization using easy-to-understand analogies. Click each concept to learn more.
                    </p>
                </div>

                <div class="mt-12 max-w-5xl mx-auto grid md:grid-cols-3 gap-8">
                    <div id="card-blockchain" class="tech-card border-2 border-gray-200 rounded-lg p-6 cursor-pointer hover:shadow-lg">
                        <h3 class="text-xl font-semibold">🔗 Blockchain</h3>
                        <p class="mt-2 text-gray-600">The secure, shared public ledger.</p>
                    </div>
                    <div id="card-mining" class="tech-card border-2 border-gray-200 rounded-lg p-6 cursor-pointer hover:shadow-lg">
                        <h3 class="text-xl font-semibold">⛏️ Mining</h3>
                        <p class="mt-2 text-gray-600">How transactions are verified.</p>
                    </div>
                    <div id="card-decentralization" class="tech-card border-2 border-gray-200 rounded-lg p-6 cursor-pointer hover:shadow-lg">
                        <h3 class="text-xl font-semibold">🌐 Decentralization</h3>
                        <p class="mt-2 text-gray-600">Why no one is in charge.</p>
                    </div>
                </div>

                <div id="tech-explanation" class="mt-8 p-8 bg-gray-50 rounded-lg min-h-[200px] flex flex-col items-center justify-center transition-opacity duration-500 opacity-0">
                    <div id="content-blockchain" class="tech-content hidden w-full">
                        <h4 class="text-2xl font-bold mb-2">Blockchain: A Digital Notary</h4>
                        <p class="text-lg text-gray-700">Imagine a public notebook that's copied and shared among thousands of people. Every time a transaction happens, it's written down in the notebook. Because everyone has a copy, it's impossible for one person to cheat or change a past entry without everyone else noticing. This shared, unchangeable ledger is the blockchain, and it creates trust without needing a bank.</p>
                    </div>
                    <div id="content-mining" class="tech-content hidden w-full">
                        <h4 class="text-2xl font-bold mb-2">Mining: A Competitive Puzzle</h4>
                        <p class="text-lg text-gray-700">"Miners" are like digital auditors competing to solve a very complex math puzzle. The first one to solve it gets to add the latest batch of transactions (a "block") to the blockchain. As a reward, they receive new bitcoins. This process, called "Proof-of-Work," secures the network and is the only way new bitcoins are created.</p>
                    </div>
                     <div id="content-decentralization" class="tech-content hidden w-full">
                        <h4 class="text-2xl font-bold mb-2">Decentralization: No Single Leader</h4>
                        <p class="text-lg text-gray-700">Unlike a bank or government, Bitcoin is not controlled by any single company or person. The power is distributed across all users on the network. This means no one can freeze your account, block a payment, or change the rules on a whim. It's this resistance to censorship and control that makes Bitcoin revolutionary.</p>
                    </div>
                     <div id="content-default" class="text-center text-gray-500 w-full">
                        <p class="text-lg">Click on a concept above to see its explanation.</p>
                    </div>

                    <!-- Explain it Better Feature -->
                    <div id="explainBetterSection" class="mt-6 w-full flex flex-col items-center hidden">
                        <button id="explainBetterBtn" class="bg-amber-600 hover:bg-amber-700 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:scale-105">
                            Explain it Better ✨
                        </button>
                        <div id="explainBetterResultContainer" class="mt-4 p-4 bg-amber-100 rounded-lg w-full text-center hidden">
                            <p id="explainBetterResult" class="text-lg text-amber-900 italic">
                                <!-- Explained content will be here -->
                            </p>
                        </div>
                        <div id="explainBetterLoading" class="hidden mt-4 flex justify-center items-center">
                            <div class="spinner"></div>
                            <span class="ml-2 text-amber-700">Simplifying...</span>
                        </div>
                    </div>

                </div>
            </div>
        </section>


        <!-- The Market Section -->
        <section id="market" class="py-16 md:py-24">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="max-w-3xl mx-auto text-center">
                    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">The Bitcoin Market</h2>
                    <p class="mt-4 text-lg text-gray-600">
                        Bitcoin's market is defined by its dramatic price movements and its unique supply mechanics. This section provides an interactive look at its historical price journey, its current valuation, and the built-in scarcity that underpins its value proposition.
                    </p>
                </div>

                <div class="mt-12 grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
                    <div class="stat-card">
                        <h3 class="text-gray-500 font-medium">Current Price</h3>
                        <div id="currentPriceLoading" class="flex justify-center items-center"><div class="spinner"></div></div>
                        <p id="currentPrice" class="text-3xl font-bold text-amber-600 mt-2 hidden"></p>
                        <p id="currentPriceDate" class="text-xs text-gray-400 mt-1"></p>
                        <span class="source-text">Source: CoinGecko API</span>
                    </div>
                     <div class="stat-card">
                        <h3 class="text-gray-500 font-medium">Market Capitalization</h3>
                        <div id="marketCapLoading" class="flex justify-center items-center"><div class="spinner"></div></div>
                        <p id="marketCap" class="text-3xl font-bold text-amber-600 mt-2 hidden"></p>
                        <p class="text-xs text-gray-400 mt-1">Total value of all circulating coins</p>
                        <span class="source-text">Source: CoinGecko API</span>
                    </div>
                     <div class="stat-card">
                        <h3 class="text-gray-500 font-medium">24h Trading Volume</h3>
                        <div id="tradingVolumeLoading" class="flex justify-center items-center"><div class="spinner"></div></div>
                        <p id="tradingVolume" class="text-3xl font-bold text-amber-600 mt-2 hidden"></p>
                         <p class="text-xs text-gray-400 mt-1">Value traded in the last day</p>
                         <span class="source-text">Source: CoinGecko API</span>
                    </div>
                </div>

                <div class="grid lg:grid-cols-2 gap-16 items-center">
                    <div>
                        <h3 class="text-2xl font-bold mb-4 text-center">Historical Price Growth</h3>
                         <p class="text-center text-gray-600 mb-6">Hover over the chart to see the price at different points in time. This chart shows Bitcoin's journey on a linear scale, highlighting absolute price movements. Key market cycles are marked by dramatic peaks and deep corrections.</p>
                        <div class="chart-container">
                            <div id="priceHistoryChartLoading" class="flex justify-center items-center h-full"><div class="spinner"></div></div>
                            <canvas id="priceHistoryChart" class="hidden"></canvas>
                        </div>
                        <span class="source-text">Source: CoinGecko API (last 365 days)</span>
                    </div>
                    <div>
                        <h3 class="text-2xl font-bold mb-4 text-center">Finite Supply: The 21 Million Cap</h3>
                         <p class="text-center text-gray-600 mb-6">Bitcoin's code enforces a hard limit of 21 million coins. New coins are created at a predictable, slowing rate through "halving" events. This built-in scarcity is a core feature, making it a deflationary asset unlike traditional currencies.</p>
                         <div class="chart-container" style="max-width: 400px; height: 300px; max-height: 400px;">
                            <canvas id="supplyChart"></canvas>
                        </div>
                        <span class="source-text">Source: Bitcoin Protocol (Hardcoded)</span>
                    </div>
                </div>
            </div>
        </section>

        <!-- Global Impact Section -->
        <section id="impact" class="py-16 md:py-24 bg-white">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="max-w-3xl mx-auto text-center">
                    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">Bitcoin's Global Impact</h2>
                    <p class="mt-4 text-lg text-gray-600">
                        As a borderless digital asset, Bitcoin presents unique challenges and opportunities for the global financial system. This section examines its complex relationship with regulation, taxation, and its potential as a tool for financial privacy.
                    </p>
                </div>

                <div class="mt-12 max-w-4xl mx-auto">
                     <h3 class="text-2xl font-bold mb-6 text-center">The Fragmented Regulatory Landscape</h3>
                     <p class="text-center text-gray-600 mb-8">There is no single global approach to Bitcoin. Governments worldwide are developing regulations that range from supportive to restrictive, creating a complex patchwork of rules. Below are some examples of different national stances.</p>
                    <div id="regulation-cards" class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div class="p-6 bg-gray-50 rounded-lg border border-gray-200">
                            <h4 class="font-bold text-lg text-green-700">Supportive Stance</h4>
                            <p class="text-sm text-gray-500 mb-2">e.g., Switzerland, UAE, Japan</p>
                            <p class="text-gray-600">These nations have created clear legal frameworks to foster innovation, integrating crypto into their financial systems while managing risks.</p>
                        </div>
                         <div class="p-6 bg-gray-50 rounded-lg border border-gray-200">
                            <h4 class="font-bold text-lg text-blue-700">Developing Regulation</h4>
                             <p class="text-sm text-gray-500 mb-2">e.g., United States, European Union</p>
                            <p class="text-gray-600">Regulation is handled by multiple agencies (SEC, CFTC in the US). The focus is on investor protection, financial stability, and AML, with rules constantly evolving.</p>
                        </div>
                        <div class="p-6 bg-gray-50 rounded-lg border border-gray-200">
                            <h4 class="font-bold text-lg text-red-700">Restrictive Stance</h4>
                             <p class="text-sm text-gray-500 mb-2">e.g., China, Bangladesh</p>
                            <p class="text-gray-600">These countries have imposed strict bans on cryptocurrency trading and mining, citing concerns over financial stability, and capital flight.</p>
                        </div>
                    </div>

                    <div class="mt-16">
                        <h3 class="text-2xl font-bold mb-4 text-center">Taxation and Anonymity</h3>
                        <div class="p-8 bg-amber-50/50 rounded-lg border border-amber-200">
                            <p class="text-lg text-gray-800">In many countries, like the U.S., Bitcoin is treated as <strong class="font-semibold text-amber-700">property</strong>, not currency. This means buying, selling, or even using it for purchases is a taxable event, requiring detailed record-keeping. While transactions are public on the blockchain, they are <strong class="font-semibold text-amber-700">pseudonymous</strong>—linked to digital addresses, not real-world identities. This creates a complex environment for tax enforcement and has led to its use in tax evasion, as it offers a degree of financial visibility that is lower than the traditional banking system.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

    </main>
    
    <footer class="bg-white border-t border-gray-200">
        <div class="container mx-auto py-6 px-4 sm:px-6 lg:px-8 text-center text-gray-500">
            <p>&copy; 2025 Interactive Report. Data synthesized from provided research document.</p>
        </div>
    </footer>

<script>
document.addEventListener('DOMContentLoaded', function() {
    
    // Tech Explanation Interaction
    const techCards = document.querySelectorAll('.tech-card');
    const techContents = document.querySelectorAll('.tech-content');
    const techExplanationContainer = document.getElementById('tech-explanation');
    const defaultContent = document.getElementById('content-default');
    const explainBetterBtn = document.getElementById('explainBetterBtn');
    const explainBetterSection = document.getElementById('explainBetterSection');
    const explainBetterResultContainer = document.getElementById('explainBetterResultContainer');
    const explainBetterResult = document.getElementById('explainBetterResult');
    const explainBetterLoading = document.getElementById('explainBetterLoading');

    let currentConcept = '';

    function showExplanation(targetId) {
        techExplanationContainer.style.opacity = '0';
        explainBetterSection.classList.add('hidden');
        explainBetterResultContainer.classList.add('hidden');
        explainBetterResult.textContent = '';
        explainBetterLoading.classList.add('hidden');

        setTimeout(() => {
            techContents.forEach(content => content.classList.add('hidden'));
            defaultContent.classList.add('hidden');
            
            const targetContent = document.getElementById(targetId);
            if (targetContent) {
                targetContent.classList.remove('hidden');
                currentConcept = targetId.replace('content-', '');
                explainBetterSection.classList.remove('hidden');
            } else {
                defaultContent.classList.remove('hidden');
                currentConcept = '';
            }
            techExplanationContainer.style.opacity = '1';
        }, 300);
    }

    techCards.forEach(card => {
        card.addEventListener('click', function() {
            const wasActive = this.classList.contains('active');
            techCards.forEach(c => c.classList.remove('active'));
            if (!wasActive) {
                this.classList.add('active');
                const contentId = 'content-' + this.id.split('-')[1];
                showExplanation(contentId);
            } else {
                showExplanation(null);
            }
        });
    });
    
    showExplanation(null);


    // Gemini API Call for "Explain it Better"
    explainBetterBtn.addEventListener('click', async () => {
        if (!currentConcept) return;

        explainBetterResultContainer.classList.add('hidden');
        explainBetterResult.textContent = '';
        explainBetterLoading.classList.add('hidden'); // Ensure hidden at start

        const promptMap = {
            'blockchain': 'Provide an even simpler, one-sentence analogy for Blockchain.',
            'mining': 'Give a very brief, everyday analogy for Bitcoin Mining.',
            'decentralization': 'In one sentence, how would you describe decentralization in Bitcoin to a child?'
        };

        const prompt = promptMap[currentConcept] || `Explain ${currentConcept} in a very simple, short analogy.`;
        
        let chatHistory = [];
        chatHistory.push({ role: "user", parts: [{ text: prompt }] });

        const payload = { contents: chatHistory };
        const apiKey = "";
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

        explainBetterLoading.classList.remove('hidden'); // Show loading spinner after API call initiated

        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            const result = await response.json();

            if (result.candidates && result.candidates.length > 0 &&
                result.candidates[0].content && result.candidates[0].content.parts &&
                result.candidates[0].content.parts.length > 0) {
                const text = result.candidates[0].content.parts[0].text;
                explainBetterResult.textContent = text;
                explainBetterResultContainer.classList.remove('hidden');
            } else {
                explainBetterResult.textContent = 'Could not generate explanation. Please try again.';
                explainBetterResultContainer.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Error calling Gemini API:', error);
            explainBetterResult.textContent = 'Failed to fetch explanation. Network error or API issue.';
            explainBetterResultContainer.classList.remove('hidden');
        } finally {
            explainBetterLoading.classList.add('hidden');
        }
    });


    // "Ask Satoshi" Feature
    const askSatoshiBtn = document.getElementById('askSatoshiBtn');
    const satoshiQuoteContainer = document.getElementById('satoshiQuoteContainer');
    const satoshiQuote = document.getElementById('satoshiQuote');
    const satoshiLoading = document.getElementById('satoshiLoading');

    askSatoshiBtn.addEventListener('click', async () => {
        satoshiQuoteContainer.classList.add('hidden');
        satoshiQuote.textContent = '';
        satoshiLoading.classList.add('hidden'); // Ensure hidden at start

        const prompt = "Imagine you are Satoshi Nakamoto, providing a short, philosophical quote about the long-term vision of Bitcoin, its impact on financial freedom, or the power of decentralization. Keep it under 50 words.";
        
        let chatHistory = [];
        chatHistory.push({ role: "user", parts: [{ text: prompt }] });

        const payload = { contents: chatHistory };
        const apiKey = "";
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

        satoshiLoading.classList.remove('hidden'); // Show loading spinner after API call initiated

        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            const result = await response.json();

            if (result.candidates && result.candidates.length > 0 &&
                result.candidates[0].content && result.candidates[0].content.parts &&
                result.candidates[0].content.parts.length > 0) {
                const text = result.candidates[0].content.parts[0].text;
                satoshiQuote.textContent = text;
                satoshiQuoteContainer.classList.remove('hidden');
            } else {
                satoshiQuote.textContent = 'Satoshi is currently in deep thought... Please try again.';
                satoshiQuoteContainer.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Error calling Gemini API:', error);
            satoshiQuote.textContent = 'Failed to connect with Satoshi. Network error or API issue.';
            satoshiQuoteContainer.classList.remove('hidden');
        } finally {
            satoshiLoading.classList.add('hidden');
        }
    });


    // Dynamic Market Data Fetching (CoinGecko API)
    const currentPriceElem = document.getElementById('currentPrice');
    const marketCapElem = document.getElementById('marketCap');
    const tradingVolumeElem = document.getElementById('tradingVolume');
    const currentPriceDateElem = document.getElementById('currentPriceDate');

    const currentPriceLoading = document.getElementById('currentPriceLoading');
    const marketCapLoading = document.getElementById('marketCapLoading');
    const tradingVolumeLoading = document.getElementById('tradingVolumeLoading');
    const priceHistoryChartLoading = document.getElementById('priceHistoryChartLoading');

    const priceHistoryCanvas = document.getElementById('priceHistoryChart');
    let priceHistoryChartInstance; // To store the Chart.js instance

    async function fetchBitcoinMarketData() {
        // Show loading spinners
        currentPriceLoading.classList.remove('hidden');
        marketCapLoading.classList.remove('hidden');
        tradingVolumeLoading.classList.remove('hidden');
        currentPriceElem.classList.add('hidden');
        marketCapElem.classList.add('hidden');
        tradingVolumeElem.classList.add('hidden');

        try {
            const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_last_updated_at=true');
            const data = await response.json();

            if (data && data.bitcoin && data.bitcoin.usd) {
                const price = data.bitcoin.usd;
                const marketCap = data.bitcoin.usd_market_cap;
                const volume = data.bitcoin.usd_24h_vol;
                const lastUpdatedAt = data.bitcoin.last_updated_at;

                currentPriceElem.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(price);
                marketCapElem.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', notation: 'compact', maximumFractionDigits: 2 }).format(marketCap);
                tradingVolumeElem.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', notation: 'compact', maximumFractionDigits: 2 }).format(volume);

                const date = new Date(lastUpdatedAt * 1000);
                currentPriceDateElem.textContent = `As of ${date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}`;

                currentPriceElem.classList.remove('hidden');
                marketCapElem.classList.remove('hidden');
                tradingVolumeElem.classList.remove('hidden');
            } else {
                console.error('Error: Unexpected data structure from CoinGecko simple price API', data);
                currentPriceElem.textContent = '$N/A';
                marketCapElem.textContent = '$N/A';
                tradingVolumeElem.textContent = '$N/A';
                currentPriceDateElem.textContent = 'Data unavailable';
                currentPriceElem.classList.remove('hidden');
                marketCapElem.classList.remove('hidden');
                tradingVolumeElem.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Failed to fetch Bitcoin market data:', error);
            currentPriceElem.textContent = '$Error';
            marketCapElem.textContent = '$Error';
            tradingVolumeElem.textContent = '$Error';
            currentPriceDateElem.textContent = 'Failed to load';
            currentPriceElem.classList.remove('hidden');
            marketCapElem.classList.remove('hidden');
            tradingVolumeElem.classList.remove('hidden');
        } finally {
            currentPriceLoading.classList.add('hidden');
            marketCapLoading.classList.add('hidden');
            tradingVolumeLoading.classList.add('hidden');
        }
    }

    // Utility function for delay
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    async function fetchBitcoinHistoricalPriceData(retries = 2) { // Increased retries slightly
        priceHistoryChartLoading.classList.remove('hidden');
        priceHistoryCanvas.classList.add('hidden');
        const ctx = priceHistoryCanvas.getContext('2d');
        // Clear canvas and draw a temporary loading message before any chart creation
        ctx.clearRect(0, 0, priceHistoryCanvas.width, priceHistoryCanvas.height);
        ctx.font = '16px Inter';
        ctx.fillStyle = '#6B7280';
        ctx.textAlign = 'center';
        ctx.fillText('Loading historical data...', priceHistoryCanvas.width / 2, priceHistoryCanvas.height / 2);

        // Safely destroy existing chart before attempting to create a new one
        if (priceHistoryChartInstance) {
            priceHistoryChartInstance.destroy();
            priceHistoryChartInstance = null; // Important: Nullify after destruction
        }

        try {
            // Fetch data for the last 365 days, as per CoinGecko public API limits
            const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=365');
            
            if (!response.ok) {
                const errorData = await response.json();
                console.error(`API Error: ${response.status} - ${errorData.error ? errorData.error.error_message : 'Unknown error'}`);
                // If it's a rate limit or time range error, retry more explicitly
                if (response.status === 429 || (errorData.error && errorData.error.error_code === 10012)) {
                     console.log('Rate limit or time range error detected. Retrying...');
                }
                throw new Error(`API responded with status ${response.status}: ${errorData.error ? errorData.error.error_message : 'Unknown error'}`);
            }

            const data = await response.json();

            if (data && data.prices) {
                const prices = data.prices.map(item => ({
                    x: new Date(item[0]), // timestamp
                    y: item[1]           // price
                }));

                const priceHistoryCtx = priceHistoryCanvas.getContext('2d');
                priceHistoryChartInstance = new Chart(priceHistoryCtx, {
                    type: 'line',
                    data: {
                        datasets: [{
                            label: 'Bitcoin Price (USD)',
                            data: prices,
                            borderColor: '#F59E0B',
                            backgroundColor: 'rgba(245, 158, 11, 0.1)',
                            borderWidth: 2,
                            pointRadius: 0, // Hide individual points for cleaner look on dense data
                            fill: true,
                            tension: 0.3
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        parsing: false, // Tell Chart.js that data is already parsed as {x,y}
                        scales: {
                            x: {
                                type: 'time',
                                time: {
                                    unit: 'month',
                                    tooltipFormat: 'MMM d, yyyy', // Corrected format string
                                    displayFormats: {
                                        month: 'MMM yyyy', // Corrected format string
                                        year: 'yyyy'
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Date'
                                },
                                ticks: {
                                    autoSkip: true,
                                    maxTicksLimit: 20
                                }
                            },
                            y: {
                                type: 'linear', // Changed from 'logarithmic' to 'linear'
                                title: {
                                    display: true,
                                    text: 'Price (USD)' // Updated text for linear scale
                                },
                                ticks: {
                                    callback: function(value, index, values) {
                                        return '$' + new Intl.NumberFormat('en-US').format(value);
                                    }
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false,
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed.y !== null) {
                                            label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(context.parsed.y);
                                        }
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
                priceHistoryCanvas.classList.remove('hidden');
            } else {
                console.error('Error: Unexpected data structure from CoinGecko market chart API', data);
                ctx.clearRect(0, 0, priceHistoryCanvas.width, priceHistoryCanvas.height); // Clear loading message
                ctx.font = '16px Inter';
                ctx.fillStyle = '#DC2626';
                ctx.textAlign = 'center';
                ctx.fillText('Historical data unavailable from CoinGecko API.', priceHistoryCanvas.width / 2, priceHistoryCanvas.height / 2 - 10);
                ctx.fillText('Please check browser console for details.', priceHistoryCanvas.width / 2, priceHistoryCanvas.height / 2 + 15);
            }
        } catch (error) {
            console.error('Failed to fetch Bitcoin historical price data:', error);
            if (retries > 0) {
                console.log(`Retrying fetch... (${retries} left)`);
                await delay(3000); // Wait for 3 seconds before retrying
                return fetchBitcoinHistoricalPriceData(retries - 1);
            } else {
                ctx.clearRect(0, 0, priceHistoryCanvas.width, priceHistoryCanvas.height); // Clear loading message
                ctx.font = '16px Inter';
                ctx.fillStyle = '#DC2626';
                ctx.textAlign = 'center';
                ctx.fillText('Failed to load historical data after multiple attempts.', priceHistoryCanvas.width / 2, priceHistoryCanvas.height / 2 - 10);
                ctx.fillText('API might be unavailable or network issue.', priceHistoryCanvas.width / 2, priceHistoryCanvas.height / 2 + 15);
            }
        } finally {
            priceHistoryChartLoading.classList.add('hidden');
        }
    }

    // Initial data fetches on load
    fetchBitcoinMarketData();
    fetchBitcoinHistoricalPriceData();


    // Supply Chart (Remains static as its based on Bitcoin's hard-coded protocol)
    const supplyCtx = document.getElementById('supplyChart').getContext('2d');
    const supplyChart = new Chart(supplyCtx, {
        type: 'doughnut',
        data: {
            labels: ['Mined Supply (19.5M)', 'Remaining to be Mined (1.5M)'],
            datasets: [{
                data: [19.5, 1.5],
                backgroundColor: [
                    '#F59E0B',
                    '#FCD34D'
                ],
                borderColor: '#FDFBF8',
                borderWidth: 4,
                hoverOffset: 4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '70%',
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20,
                        font: {
                            size: 14
                        }
                    }
                },
                tooltip: {
                    enabled: true
                }
            }
        }
    });

    // Active nav link scrolling
    const sections = document.querySelectorAll('section');
    const navLinks = document.querySelectorAll('.nav-link');

    window.addEventListener('scroll', () => {
        let current = '';
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            if (pageYOffset >= sectionTop - 70) {
                current = section.getAttribute('id');
            }
        });

        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href').includes(current)) {
                link.classList.add('active');
            }
        });
    });

});
</script>
</body>
</html>
